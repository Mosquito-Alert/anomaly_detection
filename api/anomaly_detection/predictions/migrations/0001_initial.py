# Generated by Django 5.2 on 2025-05-12 09:16

import django.db.models.deletion
import django.db.models.expressions
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('geo', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='MetricExecution',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField(unique=True)),
                ('success_percentage', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Metric',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('value', models.FloatField()),
                ('predicted_value', models.FloatField()),
                ('lower_value', models.FloatField()),
                ('upper_value', models.FloatField()),
                ('trend', models.FloatField()),
                ('anomaly_degree', models.GeneratedField(db_persist=True, expression=models.Case(models.When(then=django.db.models.expressions.CombinedExpression(django.db.models.expressions.CombinedExpression(models.F('value'), '-', models.F('upper_value')), '/', models.F('value')), value__gt=models.F('upper_value')), models.When(then=django.db.models.expressions.CombinedExpression(django.db.models.expressions.CombinedExpression(models.F('value'), '-', models.F('lower_value')), '/', models.F('value')), value__lt=models.F('lower_value')), default=models.Value(0.0), output_field=models.FloatField()), output_field=models.FloatField())),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metrics', to='geo.municipality', unique_for_date='date')),
            ],
            options={
                'verbose_name': 'Metric',
                'verbose_name_plural': 'Metrics',
                'ordering': ['region', '-date'],
                'indexes': [models.Index(fields=['date'], name='predictions_date_6dc93c_idx'), models.Index(fields=['region', 'date'], name='predictions_region__c7e563_idx')],
                'unique_together': {('region', 'date')},
            },
        ),
        migrations.CreateModel(
            name='MetricSeasonality',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('index', models.SmallIntegerField()),
                ('yearly_value', models.FloatField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seasonalities', to='geo.municipality')),
            ],
            options={
                'verbose_name': 'Seasonality for metric',
                'verbose_name_plural': 'Seasonalities for metric',
                'ordering': ['region', 'index'],
                'indexes': [models.Index(fields=['index'], name='predictions_index_80d05c_idx')],
            },
        ),
    ]
